@*
    View for displaying stay information
    Author: [HansesM]
*@
@using BiberDAMM.Helpers
@model BiberDAMM.ViewModels.DetailsStayViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <title>Aufenthaltsdetails</title>
</head>


@* Displays the main Stayinformation [HansesM]*@
<h2>Aufenthalt von @Html.Raw(Model.Stay.Client.Surname) @Html.Raw(Model.Stay.Client.Lastname)</h2>
@{
    <!-- Displays date-information depending if a end-date is set [HansesM] -->
    if (Model.Stay.EndDate.HasValue)
    {
        <h4>vom @Html.Raw(Model.Stay.BeginDate.ToString("dd.MM.yyyy")) - @Html.Raw(Model.Stay.EndDate != null ? Model.Stay.EndDate.GetValueOrDefault().ToString("dd.MM.yyyy") : "")</h4>
    }
    else
    {
        <h4>am @Html.Raw(Model.Stay.BeginDate.ToString("dd.MM.yyyy"))</h4>
    }
}

<!-- Alert if a Edit is aborted [HansesM]-->
@if (TempData["EditStayAbort"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderungen </strong>@TempData["EditStayAbort"]
    </div>
}

<!-- Alert if Edit was successfull [HansesM]-->
@if (TempData["EditStaySuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderungen gespeichert!</strong>@TempData["EditStaySuccess"]
    </div>
}

<!-- Alert if Edit can't be processed because of concurrency [HansesM]-->
@if (TempData["EditStayConcurrency"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Achtung!</strong>@TempData["EditStayConcurrency"]
    </div>
}

<hr/>

<!-- Main form to display stay information [HansesM]-->
<div class="container-fluid">
    @using (Html.BeginForm("Edit", "Stay"))
    {
        @Html.HiddenFor(m => m.Stay.Id)
        @Html.HiddenFor(m => m.Stay.RowVersion)
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="row">

            <div class="form-group col-md-8">
                @Html.LabelFor(model => model.Stay.ICD10, new {@class = "col-form-label"})
                @Html.TextBoxFor(model => model.Stay.ICD10, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Stay.ICD10, "", new {@class = "text-danger"})
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Stay.ApplicationUserId, "Behandelnder Arzt", new {@class = "col-form-label"})
                @Html.DropDownListFor(model => model.Stay.ApplicationUserId, Model.ListDoctors, null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Stay.ApplicationUser.Lastname, "", new {@class = "text-danger"})
            </div>

        </div>
        <!-- row-->

        <div class="row">

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Stay.Result, new {@class = "col-form-label"})
                @Html.TextBoxFor(model => model.Stay.Result, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Stay.Result, "", new {@class = "text-danger"})
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Stay.BeginDate, new {@class = "col-form-label"})
                @Html.TextBoxFor(model => model.Stay.BeginDate, new {@class = "form-control", id = "begin"})
                @Html.ValidationMessageFor(model => model.Stay.BeginDate, "", new {@class = "text-danger"})
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Stay.EndDate, new {@class = "col-form-label"})
                @Html.TextBoxFor(model => model.Stay.EndDate, new {@class = "form-control", id = "end"})
                @Html.ValidationMessageFor(model => model.Stay.EndDate, "", new {@class = "text-danger"})
            </div>

        </div>
        <!--row-->

        <div class="row">

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Stay.Comment, null, new {@class = "col-form-label"})
                @Html.TextAreaFor(model => model.Stay.Comment, new {@class = "form-control", rows = "6"})
            </div>

        </div>
        <!--row-->

        <div class="row">
            <div class="form-group col-md-12">
                <input title="Speichern" type="submit" name="command" value="Speichern" class="btn btn-outline-primary btn-sm"/>
                <input title="Zur Detailssicht" type="submit" name="command" value=@ConstVariables.AbortButton class="btn btn-outline-primary btn-sm"/>
            </div>

        </div>
        <!-- row-->
    }
    <hr/>
</div>

<!-- Container for displaying the calendar [HansesM]-->
<div class="container-fluid">
    <h4> Behandlungsübersicht</h4>
    <div id="calendar"></div>
    <!-- Empty row-->
    <br/>
    <!-- Horizontal line-->
    <hr/>
</div>

<div class="container-fluid">

    <p>
        <a class="btn btn-outline-primary btn-sm" data-toggle="collapse" href="#collapseTreatmentList" aria-expanded="false" aria-controls="collapseTreatmentList">
            Behandlungsübersicht als Liste anzeigen
        </a>
    </p>
    <div class="collapse" id="collapseTreatmentList">
        <div class="card card-block">
            <!-- A list of all Treatments of the user, witch is initally hidden in a modal -->

            <h4> Behandlungsübersicht als Liste</h4>

            @* Helper variable to access the names of the attributes. Helper makes it possible to display the names when the treatment-list is empty. [HansesM] *@
            @{ var treatmentHeaderHelper = Model.Stay.Treatments.FirstOrDefault(); }

            <table id="treatmentsOfUser" class="table table-striped table-hover table-bordered" style="width: 100%;" border="1" cellspacing="0">
                <thead class="thead-inverse">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => treatmentHeaderHelper.TreatmentType.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => treatmentHeaderHelper.Begin)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => treatmentHeaderHelper.End)
                    </th>
                </tr>
                </thead>
                <!-- head-->

                <tbody>
                @foreach (var item in Model.Stay.Treatments)
                {
                    <tr onclick="location.href = '@(Url.Action("Details", "Treatment", new {item.Id}))'">
                        <td>
                            @Html.DisplayFor(modelItem => item.TreatmentType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modeItem => item.Begin)
                        </td>
                        <td>
                            @Html.DisplayFor(modeItem => item.End)
                        </td>
                    </tr>
                }
                </tbody>
                <!-- body -->

                <tfoot style="background-color: #263238; color: white; text-align: right;">
                <tr>
                    <td colspan="3">
                        <button title="Treatment hinzufügen" onclick="location.href = '@(Url.Action("Create", "Treatment", new {Model.Stay.Id}))';return false;" style="background-color: transparent; border: hidden;" class="btn btn-outline-primary btn-sm">
                            <i class="fa fa-plus-circle" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
                </tfoot>
                <!-- foot-->

            </table>


        </div>
    </div>
    <hr/>

</div>


@section Scripts{

    <!-- List of treatments [HansesM]-->
    <script>
        $(function() { $("#treatmentsOfUser").dataTable(); })
    </script>

    <!-- Datetimepicker for begin [HansesM]-->
    <script>
        $("#begin").datetimepicker({
            sliderAccessArgs: { touchonly: false },
            timeFormat: "HH:mm:ss",
            dateFormat: "dd.mm.yy"
        });
    </script>

    <!-- Datetimepicker for end [HansesM]-->
    <script>
        $("#end").datetimepicker({
            sliderAccessArgs: { touchonly: false },
            timeFormat: "HH:mm:ss",
            dateFormat: "dd.mm.yy"
        });
    </script>

    <!-- Fullcalendar with settings [HanseM]-->
    <script>
        $(document).ready(function() {
            $("#calendar").fullCalendar({
                theme: true,
                defaultView: 'agendaWeek',
                height: 550,
                editable: false,
                header: {
                    left: 'title',
                    center: '',
                    right: 'today prev,next'
                },
                events: @Html.Raw(Json.Encode(Model.ListTreatments.Data)),
                allDaySlot: false,
                slotDuration: "00:05:00",
                scrollTime: "07:30:00",

                eventClick: function(calEvent, jsEvent, view) {

                    alert("Event mit der ID geklickt: " + calEvent.title);

                    $(this).css('border-color', 'red');
                }
            });
        });

    </script>
}