<!--This is the view for creating a new treatment [KrabsJ]-->

@model BiberDAMM.ViewModels.CreationTreatment

@{
    ViewBag.Title = "Neue Behandlung für " + Model.ClientName;
}

<h2>@ViewBag.Title</h2>

<hr />

<div>
    @using (Html.BeginForm("Create", "Treatment", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken();

        //save all hidden fields
        @Html.HiddenFor(m => m.StayId);
        @Html.HiddenFor(m => m.TreatmentTypeId);
        @Html.HiddenFor(m => m.ClientId);
        @Html.HiddenFor(m => m.ClientName);
        @Html.HiddenFor(m => m.SelectedRoomId);
        if (Model.Rooms != null)
        {
            for (int i = 0; i < Model.Rooms.Count; i++)
            {
                @Html.HiddenFor(m => Model.Rooms[i].Id)
                @Html.HiddenFor(m => Model.Rooms[i].RoomNumber)
                @Html.HiddenFor(m => Model.Rooms[i].RoomTypeName)
            }
        }
        if (Model.AppointmentsOfSelectedRessources != null)
        {
            for (int i = 0; i < Model.AppointmentsOfSelectedRessources.Count; i++)
            {
                @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Id)
                @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Begin)
                @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].End)
                @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Ressource)
            }
        }

        <div class="row">

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.TreatmentTypeName, new { @class = "col-form-label" })
                <div class="row">
                    <div class="col-md-10" style="padding-right:0px">
                        @Html.TextBoxFor(model => model.TreatmentTypeName, new { @class = "form-control-inline", @readonly = "readonly" })
                    </div>
                    <div class="col-md-2" style="padding-left:5px">
                        <button type="button" title="Behandlungstyp ändern" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#changeTypeModal">Ändern</button>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.TreatmentTypeName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SelectedRoomNumber, new { @class = "col-form-label" })
                <div class="row">
                    <div class="col-md-10" style="padding-right:0px">
                        @Html.TextBoxFor(model => model.SelectedRoomNumber, new { @class = "form-control-inline", @readonly = "readonly" })
                    </div>
                    <div class="col-md-2" style="padding-left:5px">
                        <button id="selectRoomButton" type="button" title="Raum auswählen" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#selectRoomModal">Auswählen</button>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.SelectedRoomNumber, "", new { @class = "text-danger" })
            </div>

        </div>

            <!--end row-->

            <div class="row">

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Begin, new { @class = "col-form-label" })
                    @Html.TextBoxFor(model => model.Begin, new { @class = "form-control", id = "begin", @placeholder = "Behandlungsbeginn auswählen" })
                    @Html.ValidationMessageFor(model => model.Begin, "", new { @class = "text-danger"})
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.End, new { @class = "col-form-label" })
                    @Html.TextBoxFor(model => model.End, new { @class = "form-control", id = "end", @placeholder = "Behandlungsende auswählen" })
                    @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
                </div>

            </div>

            <!--end row-->

            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Description, new { @class = "col-form-label" })
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "6" })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--end row-->

            <div class="row">
                <div class="col-md-12">
                    <input title="Behandlung speichern" type="submit" value="Speichern" class="btn btn-outline-primary btn-sm">
                </div>
            </div>
    }
    <!--end form-->
</div>

<hr />

<!-- Container for displaying the calendar-->
<div class="container-fluid">
    <h4 style="display: inline-block;"> Kalenderübersicht</h4>
    <button style="background-color:transparent; border:hidden;" class="btn-outline-primary" data-toggle="modal" data-target="#calendarHelp"><i class="fa fa-question-circle fa-2x icon-outline-primary" aria-hidden="true"></i></button>
    <div id="calendar"></div>
    <!-- Empty row-->
    <br />
    <!-- Horizontal line-->
    <hr />
</div>


    <!-- changeTypeModal -->
    <div id="changeTypeModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title" style="display: inline-block;">Behandlungstyp ändern</h4>
                    <i class="fa fa-exclamation-triangle fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
                </div>

                <div class="modal-body">
                    <p>Sind Sie sicher, dass Sie den Behandlungstyp wirklich ändern möchten?</p>
                    <p>Alle bisherigen Eingaben gehen verloren!</p>
                </div>

                <div class="modal-footer">
                    <button title="Ja" class="btn btn-outline-primary btn-sm" onclick="location.href = '@Url.Action("SelectTreatmentType", "Treatment", new {id = Model.StayId})'">Ja</button>
                    <button title="Nein" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Nein</button>
                </div>

            </div>

        </div>
    </div>

    <!-- selectRoomModal -->
    <div id="selectRoomModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
@using (Html.BeginForm("UpdateCreatePageByRoomSelection", "Treatment", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <!--save all hidden fields-->
    @Html.HiddenFor(m => m.StayId)
    @Html.HiddenFor(m => m.TreatmentTypeId)
    @Html.HiddenFor(m => m.Begin)
    @Html.HiddenFor(m => m.End)
    @Html.HiddenFor(m => m.Description)
    @Html.HiddenFor(m => m.SelectedRoomNumber)
    @Html.HiddenFor(m => m.TreatmentTypeName)
    @Html.HiddenFor(m => m.ClientId);
    @Html.HiddenFor(m => m.ClientName);
    if (Model.AppointmentsOfSelectedRessources != null)
    {
        for (int i = 0; i < Model.AppointmentsOfSelectedRessources.Count; i++)
        {
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Id)
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Begin)
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].End)
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Ressource)
        }
    }

                <div class="modal-header">
                    <h4 class="modal-title" style="display: inline-block;">Raumauswahl</h4>
                    <i class="fa fa-hospital-o fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
                </div>

                <div class="modal-body">
                    <p>Bitte wählen Sie einen der aufgeführten Räume aus!</p>
                    <table id="roomsTable" class="table table-striped table-bordered" style="width: 100%;" border="1" cellspacing="0">
                        <thead class="thead-inverse">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(m => m.Rooms[1].RoomNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(m => m.Rooms[1].RoomTypeName)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <!-- head-->

                        <tbody>
                            @if (Model.Rooms != null)
	                        {
		                         for (int i = 0; i < Model.Rooms.Count; i++)
                                 {
                                    <tr>
                                        @Html.HiddenFor(m => Model.Rooms[i].RoomTypeName)
                                        @Html.HiddenFor(m => Model.Rooms[i].Id)
                                        @Html.HiddenFor(m => Model.Rooms[i].RoomNumber)
                                        <td>
                                            @Html.DisplayFor(model => model.Rooms[i].RoomNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => model.Rooms[i].RoomTypeName)
                                        </td>
                                        <td>
                                            @Html.RadioButtonFor(model => model.SelectedRoomId, Model.Rooms[i].Id, new { id = Model.Rooms[i].Id })
                                        </td>
                                    </tr>
                                 }
                            } 
                        </tbody>
                        <!-- body -->

                        <tfoot style="background-color: #263238; color: white; text-align: right">
                            <tr>
                                <td colspan="3">
                                </td>
                            </tr>
                        </tfoot>
                        <!-- foot-->

                    </table>
    
                </div>

                <div class="modal-footer" style="margin-top:20px">
                    <input title="Auswahl bestätigen" type="submit" value="Auswählen" class="btn btn-outline-primary btn-sm" formnovalidate="formnovalidate">
                    <button title="Abbrechen" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Abbrechen</button>
                </div>

}

            </div>

        </div>

    </div>

<!-- calenderHelp modal -->
<div id="calendarHelp" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title" style="display: inline-block;">Kalenderübersicht</h4>
                <i class="fa fa-question-circle fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
            </div>

            <div class="modal-body">
                <p><b>Die Kalenderübersicht hilft Ihnen Termine ohne Überschneidungen zu planen.</b></p>
                In dem Kalender werden alle Termine des Raums und der Personen angezeigt, die bisher für diese Behandlung ausgewählt wurden.
                Auch die Termine des Patienten sind enthalten.
                Nutzen Sie diese Übersicht, um einen Zeitraum für die Behandlung zu finden, in der es zu keiner Terminüberschneidung kommt.                
            </div>

            <div class="modal-footer">
                <button title="Ok" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Ok</button>
            </div>

        </div>

    </div>
</div>

@section Scripts{
<script>
    $(function () { $("#roomsTable").dataTable(); })
</script>

    <!-- Datetimepicker for begin-->
<script>
    $("#begin").datetimepicker({
        sliderAccessArgs: { touchonly: false },
        timeFormat: "HH:mm:ss",
        dateFormat: "dd.mm.yy"
    });
</script>

<!-- Datetimepicker for end-->
<script>
    $("#end").datetimepicker({
        sliderAccessArgs: { touchonly: false },
        timeFormat: "HH:mm:ss",
        dateFormat: "dd.mm.yy"
    });
</script>

    <!-- Fullcalendar with settings-->
<script>
        console.log(@Html.Raw(Json.Encode(Model.JsonAppointmentsOfSelectedRessources.Data)));

        $(document).ready(function() {
            $("#calendar").fullCalendar({
                theme: true,
                defaultView: 'agendaWeek',
                height: 550,
                editable: false,
                header: {
                    left: 'title',
                    center: '',
                    right: 'today prev,next'
                },
                events: @Html.Raw(Json.Encode(Model.JsonAppointmentsOfSelectedRessources.Data)),
                allDaySlot: false,
                slotDuration: "00:15:00",
                scrollTime: "08:00:00",
                minTime: "7:00:00",
                maxTime: "21:00:00",
                businessHours: [ // specify an array instead
                    {
                        dow: [1, 2, 3, 4], // Monday, Tuesday, Wednesday, Thursday
                        start: '08:00', // 8am
                        end: '18:00' // 6pm
                    },
                    {
                        dow: [ 5 ], // Friday
                        start: '10:00', // 10am
                        end: '16:00' // 4pm
                    }
                ],

            });
        });

</script>
}
