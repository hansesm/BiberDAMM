@*
    View for displaying a room scheduler for todays treatments
    Author: [HansesM]
*@
@model BiberDAMM.ViewModels.RoomSchedulerViewModel


@{
    ViewBag.Title = "Belegungsübersicht";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Belegungsübersicht nach Raumart</h2>

<div class="row">
    <div class="form-group col-md-6">
        @Html.Label("Datum", new { @class = "col-form-label" })
        @Html.TextBox("01.01.2017", null, new { @class = "form-control", id = "schedulerDate" })
    </div>

    <div class="form-group col-md-6">
        @Html.Label("Raumtyp", new {@class = "col-form-label"})
        @Html.DropDownList("Bed", Model.ListRooms, new {@class = "form-control", id = "roomTypeDropDown"})
    </div>


</div>
<!-- row-->
<hr />

<!-- Placeholder for the timetable [HansesM]-->
<div class="timetable"></div>

@section Scripts{
    
    <!-- Datetimepicker for Date [HansesM]-->
    <script>
        $("#schedulerDate").datepicker({
            sliderAccessArgs: { touchonly: false },
            dateFormat: "dd.mm.yy"
        });

        $("#schedulerDate").datepicker("setDate", new Date());
    </script>
    

    <!-- Author: [HansesM]-->
    <!--Der folgende Java-Script Code ist etwas tricky, ich beschreibe mal was er macht: -->
    <!-- Bei jedem Change der Dropdownlist werden insgesamt zwei Ajax abgragen an den Rooms-Controller gesendet. -->
    <!-- Die erste bekommt ein String-Array mit Raumnamen, welche zu der in der Dropdown-Liste ausgewählten Raumtyp passt. Und weißt diese als Locations für die Timetable aus. -->
    <!-- Die zweite bekommt ein Objekt vom Typ JsonRoomSchedulerEvents zurück, welche alle Behandlungen, welche zu dem heutigen Tag und dem ausgewählten Raumtyp passt zurück -->
    <!-- Da das Timetable-Objekt die Daten in einer bestimmten Reihenfolge erwartet (erst die Locations, dann die Events) ruft der erste Ajax-Call den zweiten auf sobald der erste erfolgreich war.-->
    <!-- Nachdem alle Daten erfolgreich abgerufen wurden, wird das Timetable Element gerendert und auf der Seite ausgegeben. -->


    <script>
        $(document).ready(function () {
            //Dropdownlist select change event [HansesM]
            $("#roomTypeDropDown, #schedulerDate").change(function () {
                //Checks if dropdownelement is not empty [HansesM]
                if ($("#roomTypeDropDown").val().length !== 0) {
                    //create a new timetable [HansesM]
                    var timetable = new Timetable();
                    timetable.setScope(7, 20);

                    //options for ajax-call for events [HansesM]
                    var events = {};
                    events.url = "/room/GetSchedulerEvents";
                    events.type = "POST";
                    events.data = JSON.stringify({ roomTypeName: $("#roomTypeDropDown option:selected").text(), schedulerDate: $("#schedulerDate").val() });
                    //Log only for deployment [HansesM]
                    //console.log(JSON.stringify({ end: $("#end").val(), begin: $("#begin").val(), model: $("#model option:selected").text(), roomType: $("#roomType option:selected").val() }));
                    events.dataType = "json";
                    events.contentType = "application/json";
                    //Funtion that will be called when the ajax-request was succsessfull [HansesM]
                    events.success = function(roomTimeTableEvents) {
                        //Log only for deployment [HansesM]
                        //console.log(roomTimeTableEvents);

                        for (var i = 0; i < roomTimeTableEvents.length; i++) {
                            timetable.addEvent(roomTimeTableEvents[i].treatmentType,
                                roomTimeTableEvents[i].roomName,
                                new Date(roomTimeTableEvents[i].beginDate),
                                new Date(roomTimeTableEvents[i].endDate));
                        }

                        var renderer = new Timetable.Renderer(timetable);
                        renderer.draw('.timetable');

                    };
                    events.error = function() {
                        alert("Fehler beim Events abrufen!");
                    };

                    //options for ajax-call for rooms [HansesM]
                    var rooms = {};
                    rooms.url = "/room/GetSchedulerRooms";
                    rooms.type = "POST";
                    rooms.data = JSON.stringify({ roomTypeName: $("#roomTypeDropDown option:selected").text() });
                    //Log only for deployment [HansesM]
                    //console.log(JSON.stringify({ end: $("#end").val(), begin: $("#begin").val(), model: $("#model option:selected").text(), roomType: $("#roomType option:selected").val() }));
                    rooms.dataType = "json";
                    rooms.contentType = "application/json";
                    //Funtion that will be called when the ajax-request was succsessfull [HansesM]
                    rooms.success = function(roomTimeTableRooms) {

                        timetable.addLocations(roomTimeTableRooms);
                        //Log only for deployment [HansesM]
                        //console.log(roomTimeTableRooms);

                        //Ajax-Call events started ! [HansesM]
                        $.ajax(events);

                    };
                    rooms.error = function() {
                        alert("Fehler beim Räume abrufen!");
                    };

                    //Ajax-Call room started ! [HansesM]
                    $.ajax(rooms);
                }

            });
        });
    </script>
}