<!--This is the view for creating a new treatment [KrabsJ]-->

@model BiberDAMM.ViewModels.CreationTreatment

@{
    ViewBag.Title = "Neue Behandlung für " + Model.ClientName;
}

<h2>@ViewBag.Title</h2>

<!--show alert "BeginDateEndDateError" if the selected BeginDate is after the selected EndDate-->
@if (TempData["BeginDateEndDateError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Fehlerhafte Eingaben!</strong>@TempData["BeginDateEndDateError"]
    </div>
}

<!--show alert "StayClosedError" if the selected EndDate is after the EndDate of the associated stay-->
@if (TempData["StayClosedError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Fehlerhafte Eingaben!</strong>@TempData["StayClosedError"]
    </div>
}

<!--show alert "ConflictingAppointments" if there are conflicting appointments-->
@if (TempData["ConflictingAppointments"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Terminüberschneidungen!</strong>@TempData["ConflictingAppointments"]<a class="alert-link" style="text-decoration:underline" data-toggle="modal" data-target="#conflictingAppointmentsModal">Anzeigen</a>.
    </div>
}

<hr />

<!--This form includes all inputs for creating a new treatment-->
@using (Html.BeginForm("Create", "Treatment", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken();

    //save all hidden fields
    @Html.HiddenFor(m => m.StayId);
    @Html.HiddenFor(m => m.TreatmentTypeId);
    @Html.HiddenFor(m => m.ClientId);
    @Html.HiddenFor(m => m.ClientName);
    if (Model.Rooms != null)
    {
        for (int i = 0; i < Model.Rooms.Count; i++)
        {
            @Html.HiddenFor(m => Model.Rooms[i].Id)
            @Html.HiddenFor(m => Model.Rooms[i].RoomNumber)
            @Html.HiddenFor(m => Model.Rooms[i].RoomTypeName)
        }
    }
    if (Model.AppointmentsOfSelectedRessources != null)
    {
        for (int i = 0; i < Model.AppointmentsOfSelectedRessources.Count; i++)
        {
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Id)
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].BeginDate)
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].EndDate)
            @Html.HiddenFor(m => Model.AppointmentsOfSelectedRessources[i].Ressource)
        }
    }
    if (Model.Staff != null)
    {
        for (int i = 0; i < Model.Staff.Count; i++)
        {
            @Html.HiddenFor(m => Model.Staff[i].Id)
            @Html.HiddenFor(m => Model.Staff[i].DisplayName)
            @Html.HiddenFor(m => Model.Staff[i].StaffType)
        }
    }
    if (Model.SelectedStaff != null)
    {
        for (int i = 0; i < Model.SelectedStaff.Count; i++)
        {
            @Html.HiddenFor(m => Model.SelectedStaff[i].Id)
            @Html.HiddenFor(m => Model.SelectedStaff[i].DisplayName)
            @Html.HiddenFor(m => Model.SelectedStaff[i].StaffType)
            @Html.HiddenFor(m => Model.SelectedStaff[i].Selected)
        }
    }
    <div>
        <!--Inputfields for treatment attributes-->
        <!--This row includes options for changing the treatment type and for selecting a room-->
        <div class="row">

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.TreatmentTypeName, new { @class = "col-form-label" })
                <div class="row">
                    <div class="col-md-10" style="padding-right:0px">
                        @Html.TextBoxFor(model => model.TreatmentTypeName, new { @class = "form-control-inline", @readonly = "readonly" })
                    </div>
                    <div class="col-md-2" style="padding-left:5px">
                        <button type="button" title="Behandlungstyp ändern" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#changeTreatmentTypeModal">Ändern</button>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.TreatmentTypeName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SelectedRoomNumber, new { @class = "col-form-label" })
                <div class="row">
                    <div class="col-md-10" style="padding-right:0px">
                        @Html.TextBoxFor(model => model.SelectedRoomNumber, new { @class = "form-control-inline", @readonly = "readonly" })
                    </div>
                    <div class="col-md-2" style="padding-left:5px">
                        <button id="selectRoomButton" type="button" title="Raum auswählen" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#selectRoomModal">Auswählen</button>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.SelectedRoomNumber, "", new { @class = "text-danger" })
            </div>

        </div>
        <!--end row-->
        <!--This row includes options for selecting the begin and end of the treatment-->
        <div class="row">

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BeginDate, new { @class = "col-form-label" })
                @Html.TextBoxFor(model => model.BeginDate, new { @class = "form-control", id = "beginDate", @placeholder = "Behandlungsbeginn auswählen" })
                @Html.ValidationMessageFor(model => model.BeginDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.EndDate, new { @class = "col-form-label" })
                @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", id = "endDate", @placeholder = "Behandlungsende auswählen" })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>

        </div>
        <!--end row-->
        <!--This row includes the option for selecting staffmembers-->
        <div class="row">

            <div class="form-group col-md-12">
                @Html.Label("Mitarbeiterauswahl", new { @class = "col-form-label" })

                <table class="table table-striped table-bordered">

                    <thead class="thead-inverse">
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Typ
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @if (Model.SelectedStaff == null || Model.SelectedStaff.Count == 0)
                        {
                            <tr>
                                <td colspan="2" style="text-align:center">
                                    Sie haben noch keine Mitarbeiter ausgewählt!
                                </td>
                            </tr>
                        }
                        else
                        {
                            for (int i = 0; i < Model.SelectedStaff.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => m.SelectedStaff[i].DisplayName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => m.SelectedStaff[i].StaffType)
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>

                    <tfoot style="background-color: #263238; color: white; text-align: right;">
                        <tr>
                            <td colspan="2">
                                <button id="selectStaffButton" type="button" title="Mitarbeiter aus- und wieder abwählen" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#selectStaffModal">Aus- & Abwählen</button>
                            </td>
                        </tr>
                    </tfoot>

                </table>

            </div>

        </div>
        <!--end row-->
        <!--This row includes the option for writing a comment-->
        <div class="row">

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Description, new { @class = "col-form-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "6" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>

        </div>
        <!--end row-->
        <!--This row includes the buttons for creating the treatment and for stopping the creation-->
        <div class="row">
            <div class="col-md-12">
                <input title="Behandlung speichern" type="submit" name="command" value="Speichern" class="btn btn-outline-primary btn-sm">
            </div>
        </div>
    </div>

    <hr />

    <!-- selectRoomModal -->
    <div id="selectRoomModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title" style="display: inline-block;">Raumauswahl</h4>
                    <i class="fa fa-hospital-o fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
                </div>
                <!--end modal header-->

                <div class="modal-body">
                    <p>Bitte wählen Sie einen der aufgeführten Räume aus!</p>
                    <table id="roomsTable" class="table table-striped table-bordered" style="width: 100%;" border="1" cellspacing="0">

                        <thead class="thead-inverse">
                            <tr>
                                <th>
                                    Raumnummer
                                </th>
                                <th>
                                    Raumtyp
                                </th>
                                <th>
                                    Auswahl
                                </th>
                            </tr>
                        </thead>
                        <!-- end table head-->

                        <tbody>
                            @if (Model.Rooms != null)
                            {
                                for (int i = 0; i < Model.Rooms.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(m => Model.Rooms[i].RoomNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(m => Model.Rooms[i].RoomTypeName)
                                        </td>
                                        <td>
                                            @Html.RadioButtonFor(m => Model.SelectedRoomId, Model.Rooms[i].Id, new { id = Model.Rooms[i].Id })
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <!-- end table body -->

                        <tfoot style="background-color: #263238; color: white; text-align: right">
                            <tr>
                                <td colspan="3"></td>
                            </tr>
                        </tfoot>
                        <!-- end table foot-->

                    </table>
                </div>
                <!--end modal body-->

                <div class="modal-footer" style="margin-top:20px">
                    <input title="Raumauswahl bestätigen" type="submit" name="command" value="Raum verwenden" class="btn btn-outline-primary btn-sm" formnovalidate="formnovalidate">
                    <button title="Abbrechen" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Abbrechen</button>
                </div>
                <!--end modal footer-->

            </div>
            <!--end modal content-->

        </div>
    </div>
    <!-- end selectRoomModal -->

    <!-- selectStaffModal -->
    <div id="selectStaffModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title" style="display: inline-block;">Mitarbeiterauswahl</h4>
                    <i class="fa fa-address-card fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
                </div>
                <!--end modal header-->

                <div class="modal-body">
                    <p>Bitte wählen Sie die notwendigen Mitarbeiter aus!</p>
                    <table id="staffTable" class="table table-striped table-bordered" style="width: 100%;" border="1" cellspacing="0">

                        <thead class="thead-inverse">
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Typ
                                </th>
                                <th>
                                    Auswahl
                                </th>
                            </tr>
                        </thead>
                        <!-- end table head-->

                        <tbody>
                            @if (Model.Staff != null)
                            {
                                for (int i = 0; i < Model.Staff.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(m => Model.Staff[i].DisplayName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(m => Model.Staff[i].StaffType)
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(m => Model.Staff[i].Selected)
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <!-- end table body -->

                        <tfoot style="background-color: #263238; color: white; text-align: right">
                            <tr>
                                <td colspan="3"></td>
                            </tr>
                        </tfoot>
                        <!-- end table foot-->

                    </table>
                    <!--end table-->

                </div>
                <!--end modal body-->

                <div class="modal-footer" style="margin-top:20px">
                    <input title="Mitarbeiterauswahl bestätigen" type="submit" name="command" value="Mitarbeiter einplanen" class="btn btn-outline-primary btn-sm" formnovalidate="formnovalidate">
                    <button title="Abbrechen" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Abbrechen</button>
                </div>
                <!--end modal footer-->

            </div>
            <!--end modal content-->

        </div>
    </div>
    <!-- end selectStaffModal -->

}
<!--end create treatment form-->
<!-- Container for displaying the calendar-->
<div class="container-fluid">
    <h4 style="display: inline-block;"> Kalenderübersicht</h4>
    <button style="background-color:transparent; border:hidden;" class="btn-outline-primary" data-toggle="modal" data-target="#calendarHelp"><i class="fa fa-question-circle fa-2x icon-outline-primary" aria-hidden="true"></i></button>
    <div id="calendar"></div>
    <!-- Empty row-->
    <br />
    <!-- Horizontal line-->
    <hr />
</div>
<!--end calendar-->
<!-- changeTreatmentTypeModal -->
<div id="changeTreatmentTypeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title" style="display: inline-block;">Behandlungstyp ändern</h4>
                <i class="fa fa-exclamation-triangle fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
            </div>

            <div class="modal-body">
                <p>Sind Sie sicher, dass Sie den Behandlungstyp wirklich ändern möchten?</p>
                <p>Alle bisherigen Eingaben gehen verloren!</p>
            </div>

            <div class="modal-footer">
                <button title="Ja" class="btn btn-outline-primary btn-sm" onclick="location.href = '@Url.Action("SelectTreatmentType", "Treatment", new {id = Model.StayId})'">Ja</button>
                <button title="Nein" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Nein</button>
            </div>

        </div>
        <!--end Modal content-->

    </div>
</div>
<!-- end changeTreatmentTypeModal -->
<!-- calenderHelp modal -->
<div id="calendarHelp" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title" style="display: inline-block;">Kalenderübersicht</h4>
                <i class="fa fa-question-circle fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
            </div>
            <!--end modal header-->

            <div class="modal-body">
                <p><b>Die Kalenderübersicht hilft Ihnen Termine ohne Überschneidungen zu planen.</b></p>
                In dem Kalender werden alle Termine des Raums und der Personen angezeigt, die bisher für diese Behandlung ausgewählt wurden.
                Auch die Termine des Patienten sind enthalten.
                Nutzen Sie diese Übersicht, um einen Zeitraum für die Behandlung zu finden, in der es zu keiner Terminüberschneidung kommt.
            </div>
            <!--end modal body-->

            <div class="modal-footer">
                <button title="Ok" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Ok</button>
            </div>
            <!--end modal footer-->

        </div>
        <!--end modal content-->

    </div>
</div>
<!-- end calenderHelp modal -->
<!-- conflictingAppointments modal -->
<div id="conflictingAppointmentsModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title" style="display: inline-block;">Terminkonflikte</h4>
                <i class="fa fa-bolt fa-3x icon-outline-primary" aria-hidden="true" style="float: right;"></i>
            </div>
            <!--end modal header-->

            <div class="modal-body">

                @if (Model.ConflictingAppointmentsList != null && Model.ConflictingAppointmentsList.Count > 0)
                {
                    <table class="table table-striped table-bordered">

                        <thead class="thead-inverse">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(m => m.ConflictingAppointmentsList[1].BeginDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(m => m.ConflictingAppointmentsList[1].EndDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(m => m.ConflictingAppointmentsList[1].Ressource)
                                </th>
                            </tr>
                        </thead>

                        <tbody>

                            @for (int i = 0; i < Model.ConflictingAppointmentsList.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => m.ConflictingAppointmentsList[i].BeginDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => m.ConflictingAppointmentsList[i].EndDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => m.ConflictingAppointmentsList[i].Ressource)
                                    </td>
                                </tr>
                            }

                        </tbody>

                        <tfoot style="background-color: #263238; color: white; text-align: right;">
                            <tr>
                                <td colspan="3">
                                </td>
                            </tr>
                        </tfoot>

                    </table>
                }
            </div>
            <!--end modal body-->

            <div class="modal-footer">
                <button title="Ok" class="btn btn-outline-primary btn-sm" data-dismiss="modal">Ok</button>
            </div>
            <!--end modal footer-->

        </div>
        <!--end modal content-->

    </div>
</div>
<!-- end conflictingAppointments modal -->

@section Scripts{
    <!--dynamic table for room list-->
    <script>
        $(function () { $("#roomsTable").dataTable(); })
    </script>

    <!--dynamic table for staff list-->
    <script>
        $(function () { $("#staffTable").dataTable(); })
    </script>

    <!-- Datetimepicker for begin-->
    <script>
        $("#beginDate").datetimepicker({
            sliderAccessArgs: { touchonly: false },
            timeFormat: "HH:mm:ss",
            dateFormat: "dd.mm.yy"
        });
    </script>

    <!-- Datetimepicker for end-->
    <script>
        $("#endDate").datetimepicker({
            sliderAccessArgs: { touchonly: false },
            timeFormat: "HH:mm:ss",
            dateFormat: "dd.mm.yy"
        });
    </script>

    <!-- Fullcalendar with settings-->
    <script>
        console.log(@Html.Raw(Json.Encode(Model.JsonAppointmentsOfSelectedRessources.Data)));

        $(document).ready(function() {
            $("#calendar").fullCalendar({
                theme: true,
                defaultView: 'agendaWeek',
                height: 550,
                editable: false,
                header: {
                    left: 'title',
                    center: '',
                    right: 'today prev,next'
                },
                events: @Html.Raw(Json.Encode(Model.JsonAppointmentsOfSelectedRessources.Data)),
                allDaySlot: false,
                slotDuration: "00:15:00",
                scrollTime: "08:00:00",
                minTime: "7:00:00",
                maxTime: "21:00:00",
                businessHours: [ // specify an array instead
                    {
                        dow: [1, 2, 3, 4], // Monday, Tuesday, Wednesday, Thursday
                        start: '08:00', // 8am
                        end: '18:00' // 6pm
                    },
                    {
                        dow: [ 5 ], // Friday
                        start: '10:00', // 10am
                        end: '16:00' // 4pm
                    }
                ],

            });
        });
    </script>
}
