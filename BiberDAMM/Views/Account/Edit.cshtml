<!--
    This is the view for editing an ApplicationUser
    author: KrabsJ
-->

@model BiberDAMM.Models.EditViewModel
@using BiberDAMM.Helpers
@{
    ViewBag.Title = "Benutzer ändern";
}

<h2>@ViewBag.Title</h2>

@*
<!--show alert "createUserFailed" if the create-method failed-->
@if (TempData["CreateUserFailed"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Registrierung fehlgeschlagen!</strong>@TempData["CreateUserFailed"]
    </div>
}
*@

<p>
    @Html.ActionLink("Neues Initialpasswort für dieses Nutzer vergeben", "NewPassword")
</p>

<p>
@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Lastname, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Lastname, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Lastname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @type = "text" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UserType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.UserType, new { @class = "btn btn.btn-outline-secondary dropdown-toggle" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Active, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div class="checkbox">
                <label>@Html.CheckBoxFor(m => m.Active)</label>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="command" value="Änderungen speichern" class="btn-primary"/>
            <input type="submit" name="command" value=@ConstVariables.AbortButton class="btn-primary" formnovalidate="formnovalidate"/>
        </div>
    </div>
}
    </p>
<p>

<!--enable scripts for validation-->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
