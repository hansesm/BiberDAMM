<!--
This is the view for awarding a new Password to an user
author: KrabsJ
-->

@using BiberDAMM.Helpers
@model BiberDAMM.Models.NewInitialPasswordViewModel
@{
    ViewBag.Title = "Neues Passwort vergeben für: " + Model.UserName;
}

<h2>@ViewBag.Title</h2>

<!--show alert "NewInitialPasswordFailed" if the NewInitialPassword-method failed-->
@if (TempData["NewInitialPasswordFailed"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderung fehlgeschlagen!</strong>@TempData["NewInitialPasswordFailed"]
    </div>
}

<p>
    @using (Html.BeginForm("NewInitialPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.UserName)

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input title="Speichern" type="submit" name="command" value="Passwort speichern" class="btn btn-outline-primary btn-sm" />
                <input title="Abbrechen" type="submit" name="command" value=@ConstVariables.AbortButton class="btn btn-outline-primary btn-sm" formnovalidate="formnovalidate" />
            </div>
        </div>
    }
</p>
<p>

    <!--enable scripts for validation-->
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
