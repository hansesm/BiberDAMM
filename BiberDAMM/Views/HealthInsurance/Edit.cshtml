@* AUTHOR     : ChristesR *@

@* View for editing Healthinsurances *@

@model BiberDAMM.Models.HealthInsurance

@{
    ViewBag.Title = "Versicherung bearbeiten";
}

@if (TempData["HealthInsuranceSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>@TempData["HealthInsuranceSuccess"]</strong>
    </div>
}

@if (TempData["HealthInsuranceError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>@TempData["HealthInsuranceError"]</strong>
    </div>
}

<h2>Versicherung bearbeiten</h2>


@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Number, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Number, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, new { @class = "btn btn.btn-outline-secondary dropdown-toggle"})
                @Html.ValidationMessageFor(model => model.Type, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input title="Speichern" type="submit" value="Speichern" class="btn btn-outline-primary btn-sm"/>
                <button title="Zurück zur Übersicht" onclick="location.href = '@Url.Action("Index")';return false;" class="btn btn-outline-primary btn-sm">Zurück</button>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}