@using BiberDAMM.Helpers

@model BiberDAMM.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Passwort ändern";
}

<h2>@ViewBag.Title</h2>

<!--show alert "ChangePasswordFailed" if the ChangePassword-method failed-->
@if (TempData["ChangePasswordFailed"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderung fehlgeschlagen!</strong>@TempData["ChangePasswordFailed"]
    </div>
}

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    <hr/>
    @Html.ValidationSummary("", new {@class = "text-danger"})
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new {@class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new {@class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input title="Passwort speichern" type="submit" name="command" value="Speichern" class="btn btn-outline-primary btn-sm" />
            <input title="Abbrechen" type="submit" name="command" value=@ConstVariables.AbortButton class="btn btn-outline-primary btn-sm" formnovalidate="formnovalidate" />
        </div>
    </div>
}