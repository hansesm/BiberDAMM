<!--
This is the view for editing an ApplicationUser
author: KrabsJ
-->

@using BiberDAMM.Helpers
@model BiberDAMM.Models.EditViewModel
@{
    ViewBag.Title = "Benutzer ändern";
}

<h2 style="display: inline-block;">@ViewBag.Title</h2>
<button style="float: right;" title="Neues Passwort vergeben" onclick="location.href = '@Url.Action("NewInitialPassword", "Account", new { userId = Model.Id })'" class="btn btn-outline-primary btn-sm">Neues Passwort</button>

<!--show alert "ErrorDependenciesOnRole" if the edit-method failed, because of role dependencies of the user-->
@if (TempData["ErrorDependenciesOnRole"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderung fehlgeschlagen!</strong>@TempData["ErrorDependenciesOnRole"]
    </div>
}

<!--show alert "EditUserFailed" if the edit-method failed-->
@if (TempData["EditUserFailed"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderung fehlgeschlagen!</strong>@TempData["EditUserFailed"]
    </div>
}

<hr />

    @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Surname, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Surname, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Surname, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Lastname, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Lastname, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Lastname, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.PhoneNumber, new {@class = "form-control", type = "text"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.UserType, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.UserType, new {@class = "btn btn.btn-outline-secondary dropdown-toggle"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Active, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                <div class="checkbox">
                    <label>@Html.CheckBoxFor(m => m.Active)</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input title="Änderungen speichern" type="submit" name="command" value="Speichern" class="btn btn-outline-primary btn-sm"/>
                <input title="Abbrechen" type="submit" name="command" value=@ConstVariables.AbortButton class="btn btn-outline-primary btn-sm" formnovalidate="formnovalidate"/>
            </div>
        </div>
    }