@* AUTHOR     : ChristesR *@

@* View for editing Clients *@



@model BiberDAMM.Models.Client

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["ClientSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>@TempData["ClientSuccess"]</strong>
    </div>
}

@if (TempData["ClientError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>@TempData["ClientError"]</strong>
    </div>
}

<h2>Patienten Bearbeiten</h2>


@using (Html.BeginForm("Edit", "Client"))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lastname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Sex, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthdate, new { @class = "control-label col-md-2"})
            <div class="col-md-10">
               @* @Html.TextBoxFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control", id = "birthDate" } })*@
                @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control", id = "birthDate" })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsuranceNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsuranceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsuranceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", rows = "6" })
               @* @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.DisplayNameFor(model => model.HealthInsurance.Name)
                <input type="submit" name="ChangeHealthInsurance" value="Krankenversicherung ändern" class="btn btn-outline-primary btn-sm" />

                <br />

                @Html.DisplayFor(model => model.HealthInsurance.Name)

                @Html.HiddenFor(model => model.HealthInsuranceId)

                <br />
                <br />


            </div>
        </div>


        @Html.HiddenFor(x => x.RowVersion)
        @Html.HiddenFor(x => x.Captured)
        @Html.HiddenFor(x => x.LastUpdated)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input title="Hinterlegte Kontakte bearbeiten" type="submit" name="EditContacts" value="Hinterlegte Kontaktdaten bearbeiten" class="btn btn-outline-primary btn-sm" />
                <input title="Speichern" type="submit" name="Save" value="Speichern" class="btn btn-outline-primary btn-sm" />
                <input title="Bearbeitung abbrechen und zurück zur Übersicht" type="submit" name="Cancel" value="Abbrechen" class="btn btn-outline-primary btn-sm" />
            </div>
        </div>
    </div>
}

@*
    @Html.LabelFor(model => model.HealthInsuranceId, "HealthInsuranceId", new { @class = "control-label col-md-2" })
     <div class="col-md-10">
            @Html.DropDownList("HealthInsuranceId", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.HealthInsuranceId, "", new { @class = "text-danger" })
        </div>
*@

@section Scripts{


    <!-- Datetimepicker for begin-->
    <script>
        $("#birthDate").datepicker({
            sliderAccessArgs: { touchonly: false },
            dateFormat: "dd.mm.yy"
        });
    </script>

}