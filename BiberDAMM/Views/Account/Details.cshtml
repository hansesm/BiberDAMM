<!-- details page for an ApplicationUser
author: KrabsJ
-->

@model BiberDAMM.Models.ApplicationUser

@{
    ViewBag.Title = "Benutzerdetails";
}

<h2>@ViewBag.Title</h2>

<!--show alert "EditUserSuccess" if a user was successfully updated-->
@if (TempData["EditUserSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <strong>Änderungen gespeichert!</strong>@TempData["EditUserSuccess"]
    </div>
}

<p>
    @Html.ActionLink("Zurück zur Übersicht", "Index")
</p>

<div>
    <hr/>
    <dl class="dl-horizontal">
        <dt>
            Benutzername
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>

        @if (!Model.Title.IsEmpty())
        {
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.Surname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Surname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Lastname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Lastname)
        </dd>

        <dt>
            E-Mail
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            Telefonnummer
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Active)
        </dt>

        @if (Model.Active)
        {
            <dd>ja</dd>
        }
        else
        {
            <dd>nein</dd>
        }

    </dl>
</div>
<p>

    <!--TODO [KrabsJ] delte unnecessary comments-->

    @*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)

        <div class="form-actions no-color">*@

    <button title="Bearbeiten" onclick="location.href = '@Url.Action("Edit", "Account", new {userId = Model.Id})'" class="btn btn-outline-primary btn-sm"><i class="fa fa-pencil" aria-hidden="true"></i></button>
    <button title="Löschen" onclick="location.href = '@Url.Action("Edit", "Account", new {userId = Model.Id})'" class="btn btn-outline-primary btn-sm"><i class="fa fa-trash-o" aria-hidden="true"></i></button>


    @* Eine Krankenkasse darf nur gelöscht werden, wenn ihr keine Patienten zugeordnet sind
            @if (Model.Client.Count == 0)
            {

                <input type="submit" value="Löschen" class="btn btn-default" />
            }
            else
            {
                <h5>Versicherung kann nicht gelöscht werden, da ihr noch Patienten zugeordnet sind.</h5>
            }*@
    <br/>
    <br/>
    @*</div>
    }*@
</p>